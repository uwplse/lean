language: cpp
sudo: true
cache: apt
dist: trusty
group: deprecated-2017Q3
addons:
  apt:
    sources: &apt_sources
      - ubuntu-toolchain-r-test
      - sourceline: 'ppa:kalakris/cmake' # cmake 2.8 for precise
      - sourceline: 'ppa:adrozdoff/cmake' # cmake 3 for trusty
      - sourceline: 'ppa:h-rayflood/llvm'
      - sourceline: ppa:hvr/z3   # z3 for the smt interface package
    packages: &default_packages
      - cmake
      - libgmp-dev
      - libgoogle-perftools-dev
      - g++-4.9
      - clang-3.4

matrix:
  include:
   - os: linux
     dist: precise
     env:
       CMAKE_CXX_COMPILER=g++-4.9
       CMAKE_BUILD_TYPE=Release
       UPLOAD=ON
       STATIC=ON

   - os: linux
     env:
       CMAKE_CXX_COMPILER=clang++-3.4
       CMAKE_BUILD_TYPE=Release
       LEAN_EXTRA_MAKE_OPTS=-t0
       TCMALLOC=ON

   - os: linux
     addons: &gcc6_addons
       apt:
         sources: *apt_sources
         packages:
           - *default_packages
           - g++-6
           - gcc-6
     env:
       CMAKE_CXX_COMPILER=g++-6
       CMAKE_BUILD_TYPE=Release
       TCMALLOC=ON

   - os: linux
     addons: *gcc6_addons
     env:
       CMAKE_CXX_COMPILER=g++-6
       CMAKE_BUILD_TYPE=Release
       TESTCOV=ON

   - os: linux
     addons: *gcc6_addons
     env:
       CMAKE_CXX_COMPILER=g++-6
       CMAKE_BUILD_TYPE=Release
       MULTI_THREAD=OFF

   - os: linux
     addons:
       apt:
         sources: *apt_sources
         packages:
           - *default_packages
           - z3
     env:
       CMAKE_CXX_COMPILER=g++-4.9
       CMAKE_BUILD_TYPE=Release
       TEST=OFF
       TEST_LEANPKG_REGISTRY=ON

   - os: linux
     env:
       CMAKE_CXX_COMPILER=clang++-3.4
       CMAKE_BUILD_TYPE=Debug
       TCMALLOC=ON

   - os: linux
     dist: precise
     env:
       CMAKE_CXX_COMPILER=g++-4.9
       CMAKE_BUILD_TYPE=Debug

   - os: osx
     env:
       CMAKE_CXX_COMPILER=clang++
       CMAKE_BUILD_TYPE=Release
       UPLOAD=ON

   - os: osx
     env:
       CMAKE_CXX_COMPILER=g++
       CMAKE_BUILD_TYPE=Debug

before_install:
  - if [[ $TRAVIS_OS_NAME == osx ]]; then
      brew update &&
      brew install gcc &&
      brew install gmp;
    fi

script:
  - mkdir -p build
  - cd build
  - if [[ $TESTCOV != ON ]]; then TESTCOV=OFF; fi
  - if [[ $TCMALLOC != ON ]]; then TCMALLOC=OFF; fi
  - if [[ $STATIC != ON ]]; then STATIC=OFF; fi
  - if [[ $MULTI_THREAD != OFF ]]; then MULTI_THREAD=ON; fi
  - OPTIONS=""
  - if [[ $TRAVIS_BRANCH == cse-505 ]]; then OPTIONS+=" -DLEAN_VERSION_STRING=nightly"; fi
  - cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE
          -DCMAKE_CXX_COMPILER=$CMAKE_CXX_COMPILER
          -DTESTCOV=$TESTCOV
          -DTCMALLOC=$TCMALLOC
          -DMULTI_THREAD=$MULTI_THREAD
          -DSTATIC=$STATIC
          -DLEAN_EXTRA_MAKE_OPTS=$LEAN_EXTRA_MAKE_OPTS
          $OPTIONS
          ../src || exit
  - make -j2 || exit
  - if [[ $TEST != OFF ]]; then yes "A" | ctest -j2 --output-on-failure; fi
  - if [[ $UPLOAD == ON ]]; then cpack; fi
  - if [[ $UPLOAD == ON && $GH_TOKEN && $TRAVIS_PULL_REQUEST == false && $TRAVIS_BRANCH == cse-505 ]]; then (cd ..; bash script/deploy_gh_pages.sh); fi
  - if [[ $TEST_LEANPKG_REGISTRY == ON ]]; then ../script/test_registry.py; fi
  - cd ..

after_script:
  - if [[ $TESTCOV == ON ]]; then bash <(curl -s https://codecov.io/bash) -x gcov-6; fi

notifications:
  email:
    recipients:
     - jroesch@cs.washington.edu
    on_success: change
    on_failure: always

deploy:
  provider: releases
  api_key: $GH_TOKEN
  file_glob: true
  file: build/lean-*
  skip_cleanup: true
  overwrite: true
  on:
    condition: $UPLOAD = ON && $GH_TOKEN
    repo: uwplse/lean
    tags: true
